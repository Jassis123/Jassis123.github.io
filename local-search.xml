<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>开启DCDC转换瞬间，输出电压有时会先被拉低是为什么？</title>
    <link href="/2025/03/24/DCDC%E6%B5%8B%E8%AF%95%E9%97%AE%E9%A2%98/"/>
    <url>/2025/03/24/DCDC%E6%B5%8B%E8%AF%95%E9%97%AE%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<blockquote><p>前言：作为一名嵌入式软件工程师，从项目研发到开发测试，碰到的许多问题其实都跟硬件有关，虽然有硬件工程师会处理硬件相关问题，但在此之前，也需要自己能够先一步发现问题在哪，才好让硬件去处理。<br>（其实我并不擅长硬件，但也在努力学习(<em>^_^</em>)）这里我会分享记录一些日常调试碰到的看起来很小的小问题，但其实背后的原理也很有趣。</p></blockquote><h1 id="测试问题1-：DCDC开机，BUCK电路输出电压前120ms先被拉低后抬升"><a href="#测试问题1-：DCDC开机，BUCK电路输出电压前120ms先被拉低后抬升" class="headerlink" title="[测试问题1]：DCDC开机，BUCK电路输出电压前120ms先被拉低后抬升"></a>[测试问题1]：DCDC开机，BUCK电路输出电压前120ms先被拉低后抬升</h1><p>粗略的背景知识：</p><ol><li>DCDC是直流到直流的转换电路，具体有低压到高压转换的升压电路（如boost电路），高压到低压的降压电路（如buck电路），当然也有集成的升降压双向转换的电路。这里测试的是降压的BUCK电路。</li><li>开关电源通过控制开关元件（如MOSFET）的导通和关断来转换电压和电流。</li></ol><p>先看现象：<br><img src="/images/DCDC%E6%B5%8B%E8%AF%95%E9%97%AE%E9%A2%98/image.png" alt="测试现象"></p><p>在开机一瞬间，<strong>启动过程的瞬时电流需求</strong></p><ul><li>电容充电电流：当电源启动时，输出电容处于未充电状态，需要迅速从输入源吸取电流。这会导致瞬间的大电流流入电容（即浪涌电流），尤其是在电容容值较大的情况下。</li><li>电流路径：该电流流经DCDC内部的开关元件（如MOSFET）和电感，若输入电源或转化器无法快速提供足够的电流，可能导致输入电压短暂下降。</li></ul><p><strong>DCDC控制环路的动态响应</strong></p><ul><li>控制环路延迟：启动时，反馈环路（如电压模式或电流模式控制）需要时间调节占空比来稳定输出电压。若环路响应较慢（如补偿网络参数未优化），可能导致输出电压建立过程中出现短暂跌落。</li><li>软启动功能：多数现代DCDC芯片集成软启动电路，通过逐步增加占空比，限制电容充电电流的上升速率。例如，软启动时间设为2ms时，浪涌电流被平缓控制，减少输出端电压波动</li></ul><p>当然，经查资料，也可能存在其他的影响因素，比如：<br><strong>输出负载的叠加影响</strong></p><ul><li>带载启动：若启动时输出端已连接负载（如微处理器或电机），则电容充电电流需与负载电流共同由输入源提供。此时若总电流超过输入源或转换器的能力，输出电压可能显著下跌。</li><li>轻载&#x2F;空载启动：当负载较轻时，大部分电流用于电容充电，若控制环路调节及时，输出电压跌落较轻微。</li></ul><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p>上面分析了几种原因可以分别进行验证，</p><ol><li>如果是输入电流能力不足情况下（通常可能是源的输入被限制了），那么就尝试提高输入电流的速度，以满足启动瞬间对大电流的需求。当然，在输入电流过大的话也会出现一些问题，比如控制输出电压不稳等，这时候可以调节输入软启动策略减少冲击。</li><li>如果是输出响应速度不足，说明是控制环路需要调了，可能是输出增益有问题。</li></ol><h2 id="小结：在DCDC转换器中，单纯增大输入电流是否能解决因输入不足导致的输出电压下降？"><a href="#小结：在DCDC转换器中，单纯增大输入电流是否能解决因输入不足导致的输出电压下降？" class="headerlink" title="小结：在DCDC转换器中，单纯增大输入电流是否能解决因输入不足导致的输出电压下降？"></a>小结：<strong>在DCDC转换器中，单纯增大输入电流是否能解决因输入不足导致的输出电压下降？</strong></h2><p>当然不是啦，DCDC转换器的输入功率需满足输出功率需求（考虑效率损耗）。若输入电压不足（如低于转换器最低工作电压），即使增大输入电流，输入功率仍可能不足，导致输出电压无法维持。例如，升压型转换器（Boost）在输入电压过低时，占空比可能达到极限，无法通过调整开关占空比实现升压。<br>若输入电压足够但电流不足，增大输入电流可提升输出能力。但若输入电压本身低于目标输出电压（如Buck转换器需满足Vin&gt;Vout），则无法通过增大电流解决问题。</p>]]></content>
    
    
    
    <tags>
      
      <tag>DCDC</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>在新能源公司嵌入式软件岗位的学习总结（一）</title>
    <link href="/2025/03/23/OBC-learning/"/>
    <url>/2025/03/23/OBC-learning/</url>
    
    <content type="html"><![CDATA[<h1 id="年份-x2F-项目-车载充电机开发小结"><a href="#年份-x2F-项目-车载充电机开发小结" class="headerlink" title="[年份&#x2F;项目] 车载充电机开发小结"></a>[年份&#x2F;项目] 车载充电机开发小结</h1><h2 id="1️⃣-核心技术应用"><a href="#1️⃣-核心技术应用" class="headerlink" title="1️⃣ 核心技术应用"></a>1️⃣ 核心技术应用</h2><blockquote><p>车载充电机（On-Board Charger, OBC）是电动汽车的重要组成部分，负责将外部电源转换为适合电池充电的电能。OBC的核心技术包括高效的电力电子转换、智能充电控制算法以及多种通信协议的应用，以确保充电过程的安全性和高效性。通过CAN通信，OBC能够与车辆的其他控制单元进行数据交换，实现对充电过程的实时监控和管理。</p></blockquote><h3 id="开发环境"><a href="#开发环境" class="headerlink" title="开发环境"></a>开发环境</h3><ul><li><strong>主控芯片</strong>：[TC334] </li><li><strong>协处理器</strong>：[DSP]</li><li><strong>开发工具</strong>：<ul><li>编译环境：TASKING</li><li>软件架构：AutoSAR</li><li>版本管理：Git + GitLab</li></ul></li></ul><h3 id="关键技术栈"><a href="#关键技术栈" class="headerlink" title="关键技术栈"></a>关键技术栈</h3><ul><li><strong>通信协议</strong>：<ul><li>CAN通信</li><li>SCI通信</li></ul></li><li><strong>功能模块</strong>：<ul><li>应用层</li><li>控制层</li></ul></li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>OBC</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>跨域协同水下目标探测平台设计与搭建</title>
    <link href="/2025/03/02/%E8%B7%A8%E5%9F%9F%E5%8D%8F%E5%90%8C%E6%B0%B4%E4%B8%8B%E7%9B%AE%E6%A0%87%E6%8E%A2%E6%B5%8B%E5%B9%B3%E5%8F%B0%E8%AE%BE%E8%AE%A1%E4%B8%8E%E6%90%AD%E5%BB%BA/"/>
    <url>/2025/03/02/%E8%B7%A8%E5%9F%9F%E5%8D%8F%E5%90%8C%E6%B0%B4%E4%B8%8B%E7%9B%AE%E6%A0%87%E6%8E%A2%E6%B5%8B%E5%B9%B3%E5%8F%B0%E8%AE%BE%E8%AE%A1%E4%B8%8E%E6%90%AD%E5%BB%BA/</url>
    
    <content type="html"><![CDATA[<h1 id="引言"><a href="#引言" class="headerlink" title="引言"></a><strong>引言</strong></h1><blockquote><p>随着海洋科学技术的发展，水下目标探测任务更加强调探测的效率和跨平台探测系统的协作。<br>本文对无人机-水面艇-潜器组成的探测实验平台进行了详细介绍，其中包含各无人航行器的硬件组成和模块功能介绍。另外，为了满足实验平台通信的需求，实现必要数据信息的跨介质传输，进行了相应功能设计。并且在实验室水池内对各项模块和功能进行了验证，为后续验证无人机-水面艇-潜器的探测算法提供了有效支持。</p></blockquote><h1 id="平台搭建"><a href="#平台搭建" class="headerlink" title="平台搭建"></a>平台搭建</h1><p>由无人机、水面艇和潜器组成的实验平台</p><ul><li>平台功能：具备通信、探测、定位和控制等基本功能。</li></ul><div style="text-align: center;">  <img src="/images/协同平台.png" alt="示例图片"></div><h2 id="无人机"><a href="#无人机" class="headerlink" title="无人机"></a>无人机</h2><blockquote><p>无人机提供了探测中对水面目标的探测优势。</p></blockquote><p>组成：控制单元、定位单元、通信单元和探测单元<br>主要框架结构如下：</p><div style="text-align: center;">    <img src="/images/无人机平台.png" alt="示例图片" style="width: 100%; height: auto;"></div><ul><li>控制单元：获取及处理图像数据、数据接收和传输控制指令。</li><li>定位单元：获取定位数据</li><li>通信单元：实现数据的无限通信传输。</li><li>探测单元：实现视频图像的无限传输。</li></ul><div style="display: flex; justify-content: space-around;">    <div>        <img src="/images/树莓派.png" alt="树莓派" style="height: 200px; width: 200px;">        <p>树莓派</p>    </div>    <div>        <img src="/images/Pixhawk4.png" alt="Pixhawk4" style="height: 200px; width: 200px;">        <p>Pixhawk4</p>    </div></div><h2 id="水面艇"><a href="#水面艇" class="headerlink" title="水面艇"></a>水面艇</h2><blockquote><p>水面艇是水上和水下通信与协同的必要桥梁</p></blockquote><p>组成：控制单元、定位单元、通信单元和探测单元</p><div style="text-align: center;">    <img src="/images/水面艇框架.png" alt="示例图片" style="width: 100%; height: auto;"></div><h2 id="潜器"><a href="#潜器" class="headerlink" title="潜器"></a>潜器</h2><blockquote><p>水下探测的主力，能够对目标抵近侦察</p></blockquote><p>组成：双层结构，携带声呐等设备，其他与水面艇趋同</p><h1 id="水池试验"><a href="#水池试验" class="headerlink" title="水池试验"></a>水池试验</h1><div style="text-align: center;">    <img src="/images/水池1.gif" alt="示例图片" style="width: 100%; height: auto;"></div><h1 id="湖泊试验"><a href="#湖泊试验" class="headerlink" title="湖泊试验"></a>湖泊试验</h1><div style="text-align: center;">    <img src="/images/湖泊1.png" alt="示例图片" style="width: 100%; height: auto;"></div><h1 id="海洋试验"><a href="#海洋试验" class="headerlink" title="海洋试验"></a>海洋试验</h1><div style="text-align: center;">    <img src="/images/海洋1.png" alt="示例图片" style="width: 100%; height: auto;"></div><h1 id="协同探测布局"><a href="#协同探测布局" class="headerlink" title="协同探测布局"></a>协同探测布局</h1><div style="text-align: center;">    <img src="/images/水面探测1.png" alt="示例图片" style="width: 100%; height: auto;"></div><div style="text-align: center;">    <img src="/images/协同布局.png" alt="示例图片" style="width: 100%; height: auto;"></div><blockquote><p>详情可参考论文：<em><em>J. Yan, J. Lin</em>, et al.</em>* Cooperation Detection and Tracking of Underwater Target via Aerial–Surface–Underwater Vehicles IEEE TAC, 70(2): 1068-1083, 2025。</p></blockquote>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>&lt;置顶&gt; 欢迎！个人情况速览！</title>
    <link href="/2025/02/05/hello-world/"/>
    <url>/2025/02/05/hello-world/</url>
    
    <content type="html"><![CDATA[<h1 id="林景胜"><a href="#林景胜" class="headerlink" title="林景胜"></a><strong>林景胜</strong></h1><p>燕山大学（硕士）<strong>电子信息</strong>  | 2021.09-2024.06<br>厦门理工学院    <strong>自动化</strong>   | 2017.09-2021.06<br>深圳欣锐科技股份有限公司  <strong>嵌入式软件开发</strong> | 2024.07~至今</p><hr><h2 id="科研能力"><a href="#科研能力" class="headerlink" title="科研能力"></a><strong>科研能力</strong></h2><p>硕士期间专注水下机器人强化学习控制算法开发，以第一&#x2F;共同作者在<strong>IEEE TAC</strong>（SCI一区TOP）等期刊发表论文，获发明专利1项，软件著作权两项，获得国家级竞赛奖项4项。<br>✦ <strong>科研视角</strong>：产学研结合，充分将科研成果转化为软著&#x2F;专利和论文发表，融合学术深度与工程广度。<br>✦ <strong>工程能力</strong>：从 0 到 1 主导多个水下机器人软件系统集成和开发，为科研搭建实验平台。<br>✦ <strong>团队协作</strong>：4 次带领团队攻坚竞赛项目，并成功取得国家级奖项成果。</p><h2 id="核心能力"><a href="#核心能力" class="headerlink" title="核心能力"></a><strong>核心能力</strong></h2><table><thead><tr><th><strong>嵌入式系统开发</strong></th><th><strong>算法开发与集成</strong></th><th><strong>科研工具链</strong></th></tr></thead><tbody><tr><td><strong>编程语言</strong>: C (STM32), Python (PyTorch)</td><td><strong>算法部署</strong>: 深度强化学习 (DDPG&#x2F;DQN), 目标检测 (YOLOv4-tiny)</td><td><strong>软件工具</strong>: MATLAB&#x2F;Simulink 仿真, Git&#x2F;SVN 版本管理</td></tr><tr><td><strong>操作系统</strong>: Linux 开发, RTOS, ROS 机器人开发</td><td><strong>接口集成</strong>: 上位机开发 (PyQt5), 网络通信 (TCP&#x2F;UDP), 通信协议 (UART&#x2F;I2C&#x2F;CAN&#x2F;SPI)</td><td><strong>故障诊断</strong>: 示波器使用, 软硬件问题定位与联调</td></tr></tbody></table><h2 id="项目亮点"><a href="#项目亮点" class="headerlink" title="项目亮点"></a><strong>项目亮点</strong></h2><table><thead><tr><th><strong>项目名称</strong></th><th><strong>角色</strong></th><th><strong>描述</strong></th><th><strong>时间</strong></th></tr></thead><tbody><tr><td>车载充电机软件功能开发</td><td>嵌入式软件工程师</td><td>负责车载充电机的软件功能开发与维护</td><td>2024</td></tr><tr><td>水下机器人系统研究设计与开发</td><td>软件负责人</td><td>负责水下机器人系统的研究设计与开发</td><td>2023</td></tr><tr><td>基于 ROS 智能巡检机器人系统开发</td><td>项目负责人</td><td>负责智能巡检机器人系统的开发与集成</td><td>2021</td></tr></tbody></table><!-- `水下机器人系统`：YOLOv4-tiny目标检测  | 人机交互遥操作 | 深度强化学习规划算法`智能巡检机器人`：MySQL云端数据同步 | PyQT5人机交互界面开发 | ROS激光雷达SLAM建图   --><h2 id="成果速览"><a href="#成果速览" class="headerlink" title="成果速览"></a><strong>成果速览</strong></h2><p><strong>发表论文</strong> </p><table><thead><tr><th><strong>作者</strong></th><th><strong>标题</strong></th><th><strong>期刊&#x2F;会议</strong></th><th><strong>年份</strong></th></tr></thead><tbody><tr><td>J. Yan, J. Lin, et.al</td><td>Cooperation Detection and Tracking of Underwater Target via Aerial–Surface–Underwater Vehicles</td><td>IEEE TAC</td><td>2025</td></tr><tr><td>J. Lin, J. Yan, et.al.</td><td>Cross-domain Monitoring of Underwater Targets Based on Q-learning for Heterogeneous Unmanned Vehicles</td><td>2022 41st Chinese Control Conference</td><td>2022</td></tr><tr><td>于建宇，林景胜，闫敬，等.</td><td>一种 UAV-USV-UUV 跨域协同时钟同步算法</td><td>水下无人系统学报</td><td>2024</td></tr><tr><td>高天铭, 闫敬, 尤康林, 张良, 林景胜, 罗小元</td><td>水下智能识别与自主抓取机器人设计与实现</td><td>控制理论与应用</td><td>2022</td></tr></tbody></table><p><strong>科研竞赛</strong></p><table><thead><tr><th><strong>时间</strong></th><th><strong>级别</strong></th><th><strong>奖项</strong></th><th><strong>赛事</strong></th></tr></thead><tbody><tr><td>2022.08</td><td>国家级</td><td>二等奖</td><td>首届世界大学生水下机器人大赛</td></tr><tr><td>2022.05</td><td>国家级</td><td>一等奖</td><td>全国大学生电工数学建模竞赛</td></tr><tr><td>2021.09</td><td>国家级</td><td>三等奖</td><td>第五届全国水下机器人大赛</td></tr><tr><td>2022.09</td><td>国家级</td><td>三等奖</td><td>第六届全国水下机器人大赛</td></tr><tr><td>2021.10</td><td>省级</td><td>一等奖</td><td>华北五省大学生机器人大赛河北赛区</td></tr><tr><td>2019.09</td><td>国家级</td><td>特等奖</td><td>“遨博海康杯”全国大学生智能互联创新应用设计大赛</td></tr><tr><td>2019.07</td><td>省级</td><td>三等奖</td><td>第十四届全国大学生“恩智浦杯”智能汽车竞赛华东赛区</td></tr><tr><td>2019.05</td><td>省级</td><td>三等奖</td><td>第十四届“挑战杯”福建省大学生课外学术科技作品</td></tr></tbody></table><p>完整履历与项目视频：<a href="https://linjingshengblog.netlify.app/">linjingshengblog.netlify.app</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>BlueROV水下机器人实验</title>
    <link href="/2023/06/06/%E6%B0%B4%E4%B8%8B%E6%9C%BA%E5%99%A8%E4%BA%BA%E9%A1%B9%E7%9B%AE/"/>
    <url>/2023/06/06/%E6%B0%B4%E4%B8%8B%E6%9C%BA%E5%99%A8%E4%BA%BA%E9%A1%B9%E7%9B%AE/</url>
    
    <content type="html"><![CDATA[<h1 id="BlueROV-实战"><a href="#BlueROV-实战" class="headerlink" title="BlueROV 实战"></a>BlueROV 实战</h1><h2 id="水池"><a href="#水池" class="headerlink" title="水池"></a>水池</h2><p><img src="/images/%E6%B0%B4%E6%B1%A01.gif" alt="示例图片"></p><p><img src="/images/%E6%B0%B4%E6%B1%A02.gif" alt="示例图片"></p><p><img src="/images/%E6%B0%B4%E4%B8%8B1.gif" alt="示例图片"></p><h2 id="湖泊"><a href="#湖泊" class="headerlink" title="湖泊"></a>湖泊</h2><p><img src="/images/%E6%B5%B7%E6%B4%8B.gif" alt="示例图片"></p>]]></content>
    
    
    
    <tags>
      
      <tag>水下机器人</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>中小型水下机器人研究与设计</title>
    <link href="/2022/08/07/UnderwaterRobotDesign/"/>
    <url>/2022/08/07/UnderwaterRobotDesign/</url>
    
    <content type="html"><![CDATA[<h1 id="中小型水下机器人研究与设计"><a href="#中小型水下机器人研究与设计" class="headerlink" title="中小型水下机器人研究与设计"></a>中小型水下机器人研究与设计</h1><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><blockquote><ul><li>本项目来源于研究生期间的课题衍生。这里面个人主要负责软件整体框架的设计开发与调试、机器人控制程序和硬件组装等。</li><li>具体包括基于TCP&#x2F;IP协议的网络通信，板间串口通信，水声通信，机械臂抓取程序，机器人的运动控制，强化学习控制算法，遥操作程序设计和PyQt5上位机软件制作等。</li></ul></blockquote><hr><p><strong>个人工作</strong>：负责该型机器人软件框架的设计与开发，同时负责问题排查定位与调试。具体如下：</p><ul><li><strong>控制算法</strong>：编写双闭环PID控制算法；在NVIDIA上部署深度强化学习DDPG算法（Pytorch框架）。</li><li><strong>RTOS 开发</strong>：在 STM32F103 应用 UCOSIII，提高了多任务实时性，解决中断丢失等问题。</li><li><strong>数据交互</strong>：上位机通信框架采用类 C&#x2F;S 模型设计，以实现多端交互。具体建立了基于 TCP&#x2F;IP 远程通信；IPC 进程间通信；另外，封装串口和摄像头设备接口，以共享资源。</li><li><strong>图像处理&#x2F;识别</strong>：OpenCV 图像去噪，部署 Yolov4-tiny 模型训练与检测，Fps 达 20+，反馈控制。</li><li><strong>人机交互</strong>：采用 PyQT5 界面+Socket+多线程等技术编写上位机软件，实现算法参数调试、传感器数据显示和视频图像回传，同时编写游戏手柄遥操作机器人程序。</li></ul><p><strong>【视频展示】</strong> <a href="https://www.bilibili.com/video/BV1mj41147Ke/?spm_id_from=333.999.0.0&amp;vd_source=4be7561bc287d34ebce9f64909e36931">https://www.bilibili.com/video/BV1mj41147Ke/?spm_id_from=333.999.0.0&amp;vd_source=4be7561bc287d34ebce9f64909e36931</a> </p><p><em>以下是个人参与设计研发的部分成果的展示。</em></p><h2 id="1-潜航器硬件展示"><a href="#1-潜航器硬件展示" class="headerlink" title="1.潜航器硬件展示"></a>1.潜航器硬件展示</h2><table><thead><tr><th>机器人体积</th><th>机器人重量</th><th>供电方式</th><th>通讯距离</th><th>潜水等级</th><th>照明灯</th></tr></thead><tbody><tr><td>700×600×550</td><td>40kg</td><td>220V</td><td>600m</td><td>300m</td><td>3600流明</td></tr></tbody></table><!-- ![alt text](images/Robot.png) --><div style="text-align: center;">    <img src="/images/Robot.png" alt="示例图片" style="width: 100%; height: auto;"></div><h3 id="结构介绍"><a href="#结构介绍" class="headerlink" title="结构介绍"></a>结构介绍</h3><ul><li><strong>机器人本体</strong>：密封耐压仓、回收装置、浮力材料、外部传感器</li><li><strong>检测装置</strong>：IMU、前向声呐、摄像头、压力检测、漏水检测</li><li><strong>控制器</strong>：NVIDIA Jetson xavier NX、STM32F103</li><li><strong>执行机构</strong>：直流电机（6推进器）、五自由度机械臂</li></ul><h3 id="封装测试流程"><a href="#封装测试流程" class="headerlink" title="封装测试流程"></a>封装测试流程</h3><ul><li><strong>框架组装</strong>。</li><li><strong>线路布置</strong>。控制器布放和固定、外部传感器电路连接，电源模块连接等。</li><li><strong>功能测试</strong>。模块化测试，确保压力、通信、传感器、电机驱动等正常运行。</li><li><strong>防水灌封</strong>。环氧树脂灌封和水密接插件设计，保障舱体防水性能。</li><li><strong>密封测试</strong>。通过测量气密性完成验证。</li><li><strong>封舱测试</strong>。再次进行功能验证和气密性验证。</li><li><strong>水下测试</strong>。在真实水下环境中，测试舱体防水性能、各模块水下工作状况。完成测试。<br><em>任何一个步骤没完成，则再次回退到上一个步骤进行检测。</em></li></ul><div style="text-align: center;">    <img src="/images/Test_flow.png" alt="示例图片" style="width: 100%; height: auto;"></div><h2 id="2-整体框架设计"><a href="#2-整体框架设计" class="headerlink" title="2.整体框架设计"></a>2.整体框架设计</h2><p>实现网络数据通信、数据交互传输、传感器驱动、工作状态检测和上位机调试。在该框架基础上，<strong>将不同的任务合理划分到不同的处理单元上，实现整体性能的提升</strong>。</p><div style="text-align: center;">    <img src="/images/通信结构.png" alt="示例图片" style="width: 100%; height: auto;"></div><br><ul><li>操作端局域网组网。</li><li>算力分摊。将部分数据由本地进行处理，处理结果发回边缘端设备，降低系统延迟。</li></ul><p><em>以下是软件节点设计：</em></p><p><img src="/images/System.png" alt="软件框架"></p><ul><li>NVIDIA系列板卡作为机载电脑，处理复杂的任务，如图像识别，运动规划等。</li><li>STM32作为底层控制器，搭载ucosiii，方便应用开发，提高多任务的实时性。</li></ul><h2 id="3-软件部分展示"><a href="#3-软件部分展示" class="headerlink" title="3.软件部分展示"></a>3.软件部分展示</h2><h3 id="人机交互上位机设计"><a href="#人机交互上位机设计" class="headerlink" title="人机交互上位机设计"></a>人机交互上位机设计</h3><p>由PyQt5制作界面，采用多线程，socket等技术实现，通过输入目标IP地址可以建立起相应的通信连接。主要功能：</p><ul><li>视频传输</li><li>数据监控</li><li>急停开关</li><li>消息显示</li><li>参数在线标定</li><li>手柄遥操作控制</li><li>机械臂遥操作控制</li></ul><div style="text-align: center;">    <img src="/images/上位机.png" alt="示例图片" style="width: 100%; height: auto;"></div><h3 id="基于yolov4-tiny模型训练的海产品识别"><a href="#基于yolov4-tiny模型训练的海产品识别" class="headerlink" title="基于yolov4-tiny模型训练的海产品识别"></a>基于yolov4-tiny模型训练的海产品识别</h3><p><strong>目的</strong>：采用单目摄像头+声呐进行目标探测。<br><strong>步骤</strong>：</p><ol><li>收集海参、扇贝的图像进行标注，制作数据集，采用yolov4模型进行训练。</li><li>基于训练模型，提取像素坐标，进行相应坐标转换，用于后续视觉反馈控制。</li></ol><p><em>以下是海参和扇贝的识别效果图。识别准确度较高，fps可达到33。</em></p><p><img src="/images/%E5%9B%BE%E5%83%8F%E6%A3%80%E6%B5%8B.gif" alt="示例图片"></p><!-- <div style="text-align: center;">    <img src="/images/图像检测.gif" alt="示例图片" style="width: 100%; height: auto;"></div> --><p><img src="/images/%E8%A7%86%E8%A7%89%E9%81%BF%E9%9A%9C%E5%8F%8D%E9%A6%88.png" alt="示例图片"></p><p>视觉控制算法采用模糊PID的方式，处理视觉反馈提取的数据，同时结合声呐、压力等传感器数据完成反馈。</p><h2 id="4-基于ROS机械臂遥操作"><a href="#4-基于ROS机械臂遥操作" class="headerlink" title="4.基于ROS机械臂遥操作"></a>4.基于ROS机械臂遥操作</h2><p>机械臂抓取控制（夹取，松开，回收，复位），及机器人遥操作程序。</p><div style="text-align: center;">    <img src="/images/机械臂结构.png" alt="示例图片" style="width: 100%; height: auto;"></div><h2 id="场景演示"><a href="#场景演示" class="headerlink" title="场景演示"></a>场景演示</h2><h3 id="水下抓取"><a href="#水下抓取" class="headerlink" title="水下抓取"></a>水下抓取</h3><p>基于图像检测数据反馈的模糊PID控制系统。</p><p><img src="/images/%E6%B0%B4%E4%B8%8B%E6%B5%8B%E8%AF%95.png" alt="示例图片"></p><p><img src="/images/%E6%B0%B4%E4%B8%8B%E5%9C%BA%E6%99%AF.png" alt="示例图片"></p><!-- <div style="text-align: center;">    <img src="/images/水下场景.png" alt="示例图片" style="width: 100%; height: auto;"></div> --><p>该机器人在水池、湖泊和海洋环境中进行了测试，实际效果良好，防水、控制等性能良好。</p><h3 id="证书"><a href="#证书" class="headerlink" title="证书"></a>证书</h3><p><img src="/images/%E6%B0%B4%E4%B8%8B%E6%9C%BA%E5%99%A8%E4%BA%BA%E5%A4%A7%E8%B5%9B%E5%A5%96%E9%A1%B9%E8%AF%81%E4%B9%A6.png" alt="示例图片"></p>]]></content>
    
    
    
    <tags>
      
      <tag>水下机器人</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>MyROSRobotDesign</title>
    <link href="/2021/06/30/MyROSRobotDesign/"/>
    <url>/2021/06/30/MyROSRobotDesign/</url>
    
    <content type="html"><![CDATA[<h1 id="基于ROS智能巡检机器人系统开发"><a href="#基于ROS智能巡检机器人系统开发" class="headerlink" title="基于ROS智能巡检机器人系统开发"></a>基于ROS智能巡检机器人系统开发</h1><p><strong>项目描述</strong>：该项目旨在通过目标识别、机器人控制和 SLAM 建图等，实现工业现场检测和任务执行。</p><p><strong>个人工作</strong>：</p><ul><li>机器人开发：Ubuntu 18.04 环境编写移动机器人位姿发布与订阅的 ROS 节点、远程控制节点以及基于 MySQL C API 编写数据下载和上传到新浪云服务器数据库的传输节点；</li><li>通过激光雷达和 Gmapping 部署建图与自主导航功能包；建立现场局域网通信（路由组网）。</li><li>数据库存储：新浪云服务器上挂载 PHP 脚本自动接收并存储数据到新浪云 MySQL 数据库。</li><li>目标识别：采集设备图片 Labelme 标注，采用 Yolov4-tiny 模型训练并部署检测模型</li><li>人机交互：基于 PyQT5 开发人机交互界面，从云端获取数据；指令等控制信号上传云端。</li></ul><p><strong>项目地址：</strong> <a href="https://github.com/Jassis123/InspectionRobot">https://github.com/Jassis123/InspectionRobot</a></p><hr><h2 id="运动学模型"><a href="#运动学模型" class="headerlink" title="运动学模型"></a>运动学模型</h2><p><img src="/images/MyROSRobotDesign/Kinematic_model.png" alt="alt text"></p><h2 id="软件系统框架"><a href="#软件系统框架" class="headerlink" title="软件系统框架"></a>软件系统框架</h2><ul><li>手柄遥操作</li><li>激光SLAM导航</li><li>上位机界面监视</li><li>虚拟场景操作</li></ul><p><img src="/images/MyROSRobotDesign/System.png" alt="alt text"></p><h2 id="ROS节点设计"><a href="#ROS节点设计" class="headerlink" title="ROS节点设计"></a>ROS节点设计</h2><p><img src="/images/MyROSRobotDesign/ROS.png" alt="alt text"></p><h2 id="手柄操作"><a href="#手柄操作" class="headerlink" title="手柄操作"></a>手柄操作</h2><p><img src="/images/MyROSRobotDesign/flow.png" alt="alt text"></p><h2 id="激光雷达Gmapping建图效果"><a href="#激光雷达Gmapping建图效果" class="headerlink" title="激光雷达Gmapping建图效果"></a>激光雷达Gmapping建图效果</h2><p>Gmapping它已经集成在ROS的功能包中，是移动机器人导航中使用最多的SLAM建图算法。</p><p><img src="/images/MyROSRobotDesign/Gmapping.png" alt="alt text"></p><h2 id="RTAB-Map-SLAM"><a href="#RTAB-Map-SLAM" class="headerlink" title="RTAB-Map SLAM"></a>RTAB-Map SLAM</h2><p><img src="/images/MyROSRobotDesign/System1.png" alt="alt text"></p><h2 id="手柄遥操作"><a href="#手柄遥操作" class="headerlink" title="手柄遥操作"></a>手柄遥操作</h2><p>在ROS中，C++通过mysql_real_connect函数可以连接到新浪云数据库，通过向数据库发送SQL查询，直接读取所需的数据，然后再交给ROS节点进行数据的处理。</p><p><img src="/images/MyROSRobotDesign/System2.png" alt="alt text"></p><h2 id="上位机操作"><a href="#上位机操作" class="headerlink" title="上位机操作"></a>上位机操作</h2><p><img src="/images/MyROSRobotDesign/System3.png" alt="alt text"></p><h2 id="虚拟场景建模与现实同步"><a href="#虚拟场景建模与现实同步" class="headerlink" title="虚拟场景建模与现实同步"></a>虚拟场景建模与现实同步</h2><p>Unity每帧更新程序，已知帧率为50帧&#x2F;秒，以每帧间隔0.02秒后向新浪云MySQL数据库更新一次数据，现实小车则同样以同样频率甚至更高频率采集数据库数据，并执行相应的指令。假设小车控制速度为0.5m&#x2F;s，运行时间等于帧数除以帧率，位移等于速度与时间相乘，在相同的运行时间内，只要速度一样就可以确定一致的位移。ROS小车保持上一时刻发布的瞬时速度控制，因此，小车采取合适的数据采样和指令发布频率，将尽可能的减少时延。</p><p><img src="/images/MyROSRobotDesign/System4.png" alt="alt text"></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
